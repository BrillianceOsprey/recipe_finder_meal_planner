// Mocks generated by Mockito 5.4.5 from annotations
// in recipe_finder_meal_planner/test/mock/mock_recipe_search_remote_datasource.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:recipe_finder_meal_planner/src/core/network/api_client.dart'
    as _i2;
import 'package:recipe_finder_meal_planner/src/features/recipe_search/data/datasources/recipe_search_remote_datasource.dart'
    as _i3;
import 'package:recipe_finder_meal_planner/src/features/recipe_search/domain/models/recipe.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiClient_0 extends _i1.SmartFake implements _i2.ApiClient {
  _FakeApiClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RecipeSearchRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipeSearchRemoteDatasource extends _i1.Mock
    implements _i3.RecipeSearchRemoteDatasource {
  MockRecipeSearchRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiClient get apiClient =>
      (super.noSuchMethod(
            Invocation.getter(#apiClient),
            returnValue: _FakeApiClient_0(this, Invocation.getter(#apiClient)),
          )
          as _i2.ApiClient);

  @override
  _i4.Future<List<_i5.Recipe>> searchRecipes(
    List<String>? ingredients, {
    int? offset = 0,
    int? number = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchRecipes,
              [ingredients],
              {#offset: offset, #number: number},
            ),
            returnValue: _i4.Future<List<_i5.Recipe>>.value(<_i5.Recipe>[]),
          )
          as _i4.Future<List<_i5.Recipe>>);

  @override
  _i4.Future<List<_i5.Recipe>> getRecipesByIds(List<int>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#getRecipesByIds, [ids]),
            returnValue: _i4.Future<List<_i5.Recipe>>.value(<_i5.Recipe>[]),
          )
          as _i4.Future<List<_i5.Recipe>>);
}
